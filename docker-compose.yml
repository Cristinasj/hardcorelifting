services:

  mockserver:
    build:
      context: ./mock-server
    ports:
      - '3001:3001'
    networks:
      - hardcorelifting

  frontend:
    container_name: frontend_hcl_app
    build:
      context: ./frontend
    restart: unless-stopped
    ports:
      - '80:80'
    networks:
      - hardcorelifting
    depends_on:
      - mockserver

      
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - mimir
      - loki
      - tempo
    networks:
      - hardcorelifting

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    networks:
      - hardcorelifting

  tempo:
    image: grafana/tempo:latest
    command: -config.file=/etc/tempo/local-config.yaml
    ports:
      - "3200:3200"
    volumes:
      - tempo-data:/var/tempo
    networks:
      - hardcorelifting

  mimir:
    image: grafana/mimir:latest
    command: -config.file=/etc/mimir/mimir.yaml
    ports:
      - "9009:9009"
    volumes:
      - mimir-data:/mimir
      - ./IaC/mimir-config.yaml:/etc/mimir/mimir.yml
    networks:
      - hardcorelifting

  prometheus: 
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./IaC/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - hardcorelifting

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - -nginx.scrape-uri=http://hardcorelifting.fit/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - frontend
    networks:
      - hardcorelifting

volumes:
  db_data:
  grafana-data:
  loki-data:
  tempo-data:
  mimir-data:

networks:
  hardcorelifting:
    driver: bridge
