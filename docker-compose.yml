services:
  # #Backend 
  # backend:
  #   build:
  #     context: ./backend
  #   # restart: unless-stopped
  #   ports:
  #     - '8080:8080'
  #   environment:
  #     - DEBUG=${APP_DEBUG}
  #     - LOG_LEVEL=${LOG_LEVEL}
  #     - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
  #   depends_on:
  #     - db
  #   networks:
  #     - hardcorelifting
    
  mockserver:
    build:
      context: ./mock-server
    ports:
      - '3001:3001'
    networks:
      - hardcorelifting

  # Frontend 
  frontend:
    container_name: frontend_hcl_app
    build:
      context: ./frontend
    restart: unless-stopped
#    volumes:
      #- ./frontend:/app
      #- /app/node_modules
    ports:
      - '80:80'
    networks:
      - hardcorelifting
    depends_on:
      - mockserver

  # # Base de datos PostgreSQL
  # db:
  #   image: postgres:15-alpine
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=${DB_NAME}
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_PORT=${DB_PORT}
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - hardcorelifting
      
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - mimir
      - loki
      - tempo

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki

  tempo:
    image: grafana/tempo:latest
    command: -config.file=/etc/tempo/local-config.yaml
    ports:
      - "3200:3200"
    volumes:
      - tempo-data:/var/tempo

  mimir:
    image: grafana/mimir:latest
    command: -config.file=/etc/mimir/mimir.yaml
    ports:
      - "9009:9009"
    volumes:
      - mimir-data:/mimir

  prometheus: 
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./IaC/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - hardcorelifting

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - -nginx.scrape-uri=http://hardcorelifting.fit/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - frontend

volumes:
  db_data:
  grafana-data:
  loki-data:
  tempo-data:
  mimir-data:

networks:
  hardcorelifting:
    driver: bridge
