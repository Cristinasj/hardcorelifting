services:

  mockserver:
    container_name: mockserver
    build:
      context: ./mock-server
    ports:
      - '3001:3001'

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    restart: unless-stopped
    expose:
      - '80'
    depends_on:
      - mockserver
    environment:
      - VIRTUAL_HOST=hardcorelifting.fit
      - LETSENCRYPT_HOST=hardcorelifting.fit
      - LETSENCRYPT_EMAIL=sanchezjcristin@gmail.com

      
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - mimir
      - loki
      - tempo

  prometheus: 
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./IaC/prometheus.yml:/etc/prometheus/prometheus.yml

  nginx-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter:latest
    command:
      - -nginx.scrape-uri=http://hardcorelifting.fit/nginx_status
    ports:
      - "9113:9113"
    depends_on:
      - frontend

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    network_mode: "host"   # so it binds directly to VMâ€™s 9100
    pid: "host"            # lets it see host processes
    volumes:
      - "/:/host:ro,rslave"
    command:
      - "--path.rootfs=/host"
    ports:
      - "9100:9100"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"   # Web UI and metrics
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    volumes:
      - /etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy

volumes:
  grafana-data: